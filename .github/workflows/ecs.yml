name: Deploy to AWS ECS

on:
  push:
    branches:
      - dev_test

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
       registry: 891377199948.dkr.ecr.us-east-1.amazonaws.com
       region: us-east-1
       mask-password: true
       registry-type: 'private'
            skip-logout: false

      - name: Build and push Docker image to ECR
        run: |
          docker build -t 891377199948.dkr.ecr.us-east-1.amazonaws.com/dev_ecr:latest .
          docker push 891377199948.dkr.ecr.us-east-1.amazonaws.com/dev_ecr:latest

      - name: Create ECR repository
        run: |
          aws ecr create-repository --repository-name dev_ecr --region us-east-1

      - name: Create ECS cluster
        run: |
          aws ecs create-cluster --cluster-name dev_ecs --region us-east-1

      - name: Create IAM role for ECS and ECR
        run: |
          aws iam create-role \
            --role-name ecs-ecr-role \
            --assume-role-policy-document '{
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "ecs-tasks.amazonaws.com"
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            }' \
            --region us-east-1

          # Attach policies for ECS and ECR access to the role
          aws iam attach-role-policy \
            --policy-arn arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly \
            --role-name ecs-ecr-role \
            --region us-east-1

          aws iam attach-role-policy \
            --policy-arn arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy \
            --role-name ecs-ecr-role \
            --region us-east-1

      - name: Create ECS task definition
        run: |
          TASK_DEF=$(aws ecs register-task-definition \
            --family dev_task \
            --execution-role-arn arn:aws:iam::891377199948:role/ecs-ecr-role \
            --network-mode awsvpc \
            --cpu 256 \
            --memory 512 \
            --requires-compatibilities FARGATE \
            --container-definitions '[{
              "name": "dev_container",
              "image": "891377199948.dkr.ecr.us-east-1.amazonaws.com/dev_ecr:latest",
              "cpu": 256,
              "memory": 512,
              "portMappings": [{"containerPort": 3000,"protocol": "tcp"}],
              "logConfiguration": {
                "logDriver": "awslogs",
                "options": {
                  "awslogs-group": "/ecs/dev_ecs",
                  "awslogs-region": "us-east-1",
                  "awslogs-stream-prefix": "dev_task"
                }
              }
            }]' \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)
          echo "::set-output name=task_def::${TASK_DEF##*/}"

      - name: Create ECS service
        run: |
          aws ecs create-service \
            --cluster dev_ecs \
            --service-name dev_service \
            --task-definition ${{ steps.register_task_definition.outputs.task_def }} \
            --desired-count 1 \
            --launch-type FARGATE \
            --network-configuration "awsvpcConfiguration={subnets=[subnet-07291ec7a96464cbc,subnet-0b654e718a718cde2,subnet-04bc2b9020eac6e0c,subnet-04afa4f80c1b04ac7],assignPublicIp=DISABLED}" \
            --region us-east-1
