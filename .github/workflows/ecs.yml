name: Build and Deploy to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-east-1
      AWS_REGION: us-east-1
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create ECS Cluster
        run: |
          aws ecs create-cluster --cluster-name demo-cluster1 --region us-east-1 || true

      - name: Create ECR Repository
        run: |
          aws ecr create-repository --repository-name demo-app1 --region us-east-1 || true

      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 891377199948.dkr.ecr.us-east-1.amazonaws.com

      - name: Build and push Docker image
        run: |
          docker buildx build --platform linux/amd64 -t 891377199948.dkr.ecr.us-east-1.amazonaws.com/demo-app1:latest . --push

      - name: Register ECS task definition
        id: register_task_definition
        run: |
          TASK_DEF=$(aws ecs register-task-definition \
            --family demo-task \
            --execution-role-arn arn:aws:iam::891377199948:role/Demo_App_Role \
            --network-mode awsvpc \
            --cpu 256 \
            --memory 512 \
            --requires-compatibilities FARGATE \
            --container-definitions '[
                {
                  "name": "demo-container1",
                  "image": "891377199948.dkr.ecr.us-east-1.amazonaws.com/demo-app1:latest",
                  "cpu": 256,
                  "memory": 512,
                  "portMappings": [
                    {
                      "containerPort": 3000,
                      "protocol": "tcp"
                    }
                  ],
                  "logConfiguration": {
                    "logDriver": "awslogs",
                    "options": {
                      "awslogs-group": "/ecs/demo-cluster",
                      "awslogs-region": "us-east-1",
                      "awslogs-stream-prefix": "demo-task1"
                    }
                  }
                }
              ]' \   
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)
          echo "::set-output name=task_def::${TASK_DEF##*/}"
          
      - name: Create or update ECS service
        run: |
          aws ecs create-service \
            --cluster demo-cluster1 \
            --service-name demo-service1 \
            --task-definition ${{ steps.register_task_definition.outputs.task_def }} \
            --desired-count 1 \
            --launch-type FARGATE
