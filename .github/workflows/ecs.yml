name: Build and Deploy to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-east-1
      AWS_REGION: us-east-1
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Retrieve AWS ECR login password
        id: ecr_login
        run: |
          echo "::set-output name=password::$(aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION }})"
        
      - name: Configure Docker to use AWS ECR
        run: |
          echo "${{ steps.ecr_login.outputs.password }}" | docker login --username AWS --password-stdin 891377199948.dkr.ecr.us-east-1.amazonaws.com

      - name: Build and push Docker image
        run: |
          docker buildx build --platform linux/amd64 -t 891377199948.dkr.ecr.us-east-1.amazonaws.com/demo-repo:latest .
          docker push 891377199948.dkr.ecr.us-east-1.amazonaws.com/demo-repo:latest

      - name: Set up AWS credentials for ECS deployment
        id: aws_credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Register ECS task definition
        id: register_task_definition
        run: |
          TASK_DEF=$(aws ecs register-task-definition \
            --family demo-task \
            --container-definitions '[{"name":"demo-container","image":"'"${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/demo-repo:latest"'", "memory":512, "memoryReservation":256}]' \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)
          echo "::set-output name=task_def::${TASK_DEF##*/}"
          
      - name: Create or update ECS service
        run: |
          aws ecs create-service \
            --cluster demo-cluster \
            --service-name demo-service \
            --task-definition ${{ steps.register_task_definition.outputs.task_def }} \
            --desired-count 1 \
            --launch-type FARGATE
